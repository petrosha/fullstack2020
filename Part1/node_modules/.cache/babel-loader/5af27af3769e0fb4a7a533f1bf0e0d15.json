{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.name));\n};\n\nconst Statistic = ({\n  name,\n  data\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 46\n  }\n}, name), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 61\n  }\n}, data)));\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, props.name);\n\nconst Statistics = ({\n  data\n}) => {\n  let all = Object.values(data).reduce((prev, elem) => prev + elem, 0);\n  if (all == 0) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"No feedback given yet.\"));\n  let average = all ? (data.good - data.bad) / all : 0;\n  let positive = all ? data.good / all : 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    name: \"good\",\n    data: data[\"good\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"neutral\",\n    data: data[\"neutral\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"bad\",\n    data: data[\"bad\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"all\",\n    data: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"average\",\n    data: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"positive\",\n    data: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }))));\n};\n\nconst App = () => {\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const feedbackClick = name => {\n    const handler = () => {\n      let localData = Object.assign({}, data);\n      localData[name] += 1;\n      setData(localData);\n    };\n\n    return handler;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"purple\",\n    name: \"Unicafe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Please give your feedback\"), /*#__PURE__*/React.createElement(Button, {\n    name: \"good\",\n    handleClick: feedbackClick(\"good\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"neutral\",\n    handleClick: feedbackClick(\"neutral\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"bad\",\n    handleClick: feedbackClick(\"bad\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","color","name","Statistic","data","Button","handleClick","Statistics","all","Object","values","reduce","prev","elem","average","good","bad","positive","App","setData","neutral","feedbackClick","handler","localData","assign","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Header = (props) => {\n  return (\n    <>\n      <h1 style={{ color: props.color }}>{props.name}</h1>\n    </>\n  )\n}\n\nconst Statistic = ({ name, data }) => (<><tr><td>{name}</td><td>{data}</td></tr></>);\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.name}\n  </button>\n)\n\nconst Statistics = ({ data }) => {\n\n  let all = Object.values(data).reduce((prev, elem) => prev + elem, 0);\n  if (all == 0) return (\n    <>\n      <h2>Statistics</h2>\n      <p>No feedback given yet.</p>\n    </>\n  )\n\n  let average = all ? (data.good - data.bad) / all : 0;\n  let positive = all ? data.good / all : 0;\n\n  return (\n    <>\n      <h2>Statistics</h2>\n      <table>\n        <tbody>\n      <Statistic name=\"good\" data={data[\"good\"]}/>\n      <Statistic name=\"neutral\" data={data[\"neutral\"]}/>\n      <Statistic name=\"bad\" data={data[\"bad\"]}/>\n      <Statistic name=\"all\" data={all}/>\n      <Statistic name=\"average\" data={average}/>\n      <Statistic name=\"positive\" data={positive}/>\n      </tbody>\n      </table>\n    </>\n  )\n}\n\n\nconst App = () => {\n\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  })\n\n\n  const feedbackClick = (name) => {\n    const handler = () => {\n      let localData = Object.assign({}, data);\n      localData[name] += 1;\n      setData(localData);\n    }\n    return handler;\n  }\n\n  return (\n    <div>\n      <Header color=\"purple\" name=\"Unicafe\" />\n      <hr />\n      <h2>Please give your feedback</h2>\n      <Button name=\"good\" handleClick={feedbackClick(\"good\")}></Button>\n      <Button name=\"neutral\" handleClick={feedbackClick(\"neutral\")}></Button>\n      <Button name=\"bad\" handleClick={feedbackClick(\"bad\")}></Button>\n      <hr />\n      <Statistics data={data} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}