{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const [clicks, setClicks] = useState({\n    left: 0,\n    right: 0\n  });\n\n  const handleLeftClick = () => {\n    const newClicks = {\n      left: clicks.left + 1,\n      right: clicks.right\n    };\n    setClicks(newClicks);\n  };\n\n  const handleRightClick = () => {\n    const newClicks = {\n      left: clicks.left,\n      right: clicks.right + 1\n    };\n    setClicks(newClicks);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, clicks.left, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLeftClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"left\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRightClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"right\"), clicks.right);\n}; // const Header = (props) => {\n//   return (\n//     <>\n//       <h1 style={{ color: props.color }}>{props.name}</h1>\n//     </>\n//   )\n// }\n// const Statistic = (props) => {\n//   let { name, data } = props;\n//   return (\n//     <>\n//       {console.log(\"In \", name, data[name])}\n//       <p>{name} : {data[name]}</p>\n//     </>\n//   )\n// }\n// const Button = (props) => (\n//   <button onClick={props.handleClick}>\n//     {props.name}\n//   </button>\n// )\n// const App = () => {\n//   // save clicks of each button to its own state\n//   const [data, setData] = useState({\n//     good: 0,\n//     neutral: 0,\n//     bad: 0\n//   })\n//   let tmp=data[\"good\"];\n//   const feedbackClick = (name) => {\n//     const handler = () => {\n//       let localData=Object.assign(data)\n//       localData[name]++;\n//       setData(localData)\n//       console.log(name, data[name])\n//     }    \n//     return handler;\n//   }\n//   return (\n//     <div>\n//       <Header color=\"purple\" name=\"Unicafe\" /> \n//       {tmp}\n//       <hr />\n//       <h2>Please give your feedback</h2>\n//       <Button name=\"good\" handleClick={feedbackClick(\"good\")}></Button>\n//       <Button name=\"neutral\" handleClick={feedbackClick(\"neutral\")}></Button>\n//       <Button name=\"bad\" handleClick={feedbackClick(\"bad\")}></Button>\n//       <hr />\n//       <h2>Statistics</h2>\n//       <Statistic name=\"good\" data={data}></Statistic> {data[\"good\"]}\n//       <Statistic name=\"neutral\" data={data}></Statistic>{data[\"neutral\"]}\n//       <Statistic name=\"bad\" data={data}></Statistic>{data[\"bad\"]} \n//     </div>\n//   )\n// }\n\n/*\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","App","clicks","setClicks","left","right","handleLeftClick","newClicks","handleRightClick","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACnCK,IAAAA,IAAI,EAAE,CAD6B;AAC1BC,IAAAA,KAAK,EAAE;AADmB,GAAD,CAApC;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,SAAS,GAAG;AAChBH,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAAP,GAAc,CADJ;AAEhBC,MAAAA,KAAK,EAAEH,MAAM,CAACG;AAFE,KAAlB;AAIAF,IAAAA,SAAS,CAACI,SAAD,CAAT;AACD,GAND;;AAQA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMD,SAAS,GAAG;AAChBH,MAAAA,IAAI,EAAEF,MAAM,CAACE,IADG;AAEhBC,MAAAA,KAAK,EAAEH,MAAM,CAACG,KAAP,GAAe;AAFN,KAAlB;AAIAF,IAAAA,SAAS,CAACI,SAAD,CAAT;AACD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACE,IADV,eAEE;AAAQ,IAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,IAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIGN,MAAM,CAACG,KAJV,CADF;AAQD,CA7BD,C,CAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDAL,QAAQ,CAACS,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\n\nconst App = () => {\n  const [clicks, setClicks] = useState({\n    left: 0, right: 0\n  })\n\n  const handleLeftClick = () => {\n    const newClicks = { \n      left: clicks.left + 1, \n      right: clicks.right \n    }\n    setClicks(newClicks)\n  }\n\n  const handleRightClick = () => {\n    const newClicks = { \n      left: clicks.left, \n      right: clicks.right + 1 \n    }\n    setClicks(newClicks)\n  }\n\n  return (\n    <div>\n      {clicks.left}\n      <button onClick={handleLeftClick}>left</button>\n      <button onClick={handleRightClick}>right</button>\n      {clicks.right}\n    </div>\n  )\n}\n\n\n// const Header = (props) => {\n//   return (\n//     <>\n//       <h1 style={{ color: props.color }}>{props.name}</h1>\n//     </>\n//   )\n// }\n\n// const Statistic = (props) => {\n//   let { name, data } = props;\n//   return (\n//     <>\n//       {console.log(\"In \", name, data[name])}\n//       <p>{name} : {data[name]}</p>\n//     </>\n//   )\n// }\n\n// const Button = (props) => (\n//   <button onClick={props.handleClick}>\n//     {props.name}\n//   </button>\n// )\n\n// const App = () => {\n//   // save clicks of each button to its own state\n//   const [data, setData] = useState({\n//     good: 0,\n//     neutral: 0,\n//     bad: 0\n//   })\n\n//   let tmp=data[\"good\"];\n\n//   const feedbackClick = (name) => {\n//     const handler = () => {\n//       let localData=Object.assign(data)\n\n//       localData[name]++;\n//       setData(localData)\n//       console.log(name, data[name])\n//     }    \n//     return handler;\n//   }\n\n//   return (\n//     <div>\n//       <Header color=\"purple\" name=\"Unicafe\" /> \n//       {tmp}\n//       <hr />\n//       <h2>Please give your feedback</h2>\n//       <Button name=\"good\" handleClick={feedbackClick(\"good\")}></Button>\n//       <Button name=\"neutral\" handleClick={feedbackClick(\"neutral\")}></Button>\n//       <Button name=\"bad\" handleClick={feedbackClick(\"bad\")}></Button>\n//       <hr />\n//       <h2>Statistics</h2>\n//       <Statistic name=\"good\" data={data}></Statistic> {data[\"good\"]}\n//       <Statistic name=\"neutral\" data={data}></Statistic>{data[\"neutral\"]}\n//       <Statistic name=\"bad\" data={data}></Statistic>{data[\"bad\"]} \n      \n//     </div>\n//   )\n// }\n\n\n\n\n/*\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}