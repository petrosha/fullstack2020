{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.name));\n};\n\nconst Statistic = props => {\n  let {\n    name,\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, name, \" : \", data[name]));\n};\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, props.name);\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [globalData, setGlobalData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const feedbackClick = name => {\n    const handler = () => {\n      let localData = Object.assign(globalData);\n      localData[name]++;\n      setGlobalData(localData);\n      console.log(name);\n    };\n\n    return handler;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"purple\",\n    name: \"Unicafe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Please give your feedback\"), /*#__PURE__*/React.createElement(Button, {\n    name: \"good\",\n    handleClick: feedbackClick(\"good\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"neutral\",\n    handleClick: feedbackClick(\"neutral\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"bad\",\n    handleClick: feedbackClick(\"bad\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"good\",\n    data: globalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"neutral\",\n    data: globalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"bad\",\n    data: globalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/*\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\n//ReactDOM.render(<App />, document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","color","name","Statistic","data","Button","handleClick","App","globalData","setGlobalData","good","neutral","bad","feedbackClick","handler","localData","Object","assign","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = (props) => {\n  return (\n    <>\n      <h1 style={{ color: props.color }}>{props.name}</h1>\n    </>\n  )\n}\n\nconst Statistic = (props) => {\n  let { name, data } = props;\n  return (\n    <>\n      <p>{name} : {data[name]}</p>\n    </>\n  )\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.name}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [globalData, setGlobalData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const feedbackClick = (name) => {\n    const handler = () => {\n      let localData=Object.assign(globalData);\n      localData[name]++;\n      setGlobalData(localData);\n      console.log(name);\n    }    \n    return handler;\n  }\n\n\n  return (\n    <div>\n      <Header color=\"purple\" name=\"Unicafe\" />\n      <hr />\n      <h2>Please give your feedback</h2>\n      <Button name=\"good\" handleClick={feedbackClick(\"good\")}></Button>\n      <Button name=\"neutral\" handleClick={feedbackClick(\"neutral\")}></Button>\n      <Button name=\"bad\" handleClick={feedbackClick(\"bad\")}></Button>\n      <hr />\n      <h2>Statistics</h2>\n      <Statistic name=\"good\" data={globalData}></Statistic>\n      <Statistic name=\"neutral\" data={globalData}></Statistic>\n      <Statistic name=\"bad\" data={globalData}></Statistic>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n\n/*\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\n//ReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}