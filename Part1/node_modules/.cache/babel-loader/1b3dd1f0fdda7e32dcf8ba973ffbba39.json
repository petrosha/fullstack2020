{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/1.1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n/* const Header = (props) => {\n  return (\n    <>\n      <h1>{props.data.name}</h1>\n    </>\n  )\n}\n\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst Part = (props) => {\n  return (\n    <>\n      <p>{props.data.name} {props.data.exercises}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/1.1/src/index.js"],"names":["React","useState","ReactDOM","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEAA,QAAQ,CAACC,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\n\n\n/* const Header = (props) => {\n  return (\n    <>\n      <h1>{props.data.name}</h1>\n    </>\n  )\n}\n\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst Part = (props) => {\n  return (\n    <>\n      <p>{props.data.name} {props.data.exercises}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}