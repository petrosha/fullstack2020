{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.name));\n};\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, props.name);\n\nconst Buttons = ({\n  handleClick\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, \"Please give your feedback\"), /*#__PURE__*/React.createElement(Button, {\n  name: \"good\",\n  handleClick: handleClick(\"good\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  name: \"neutral\",\n  handleClick: handleClick(\"neutral\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  name: \"bad\",\n  handleClick: handleClick(\"bad\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}));\n\nconst Statistic = ({\n  name,\n  data\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 42\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 46\n  }\n}, name), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 61\n  }\n}, data)));\n\nconst Statistics = ({\n  data\n}) => {\n  let all = Object.values(data).reduce((prev, elem) => prev + elem, 0);\n  if (all === 0) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"No feedback given yet.\"));\n  let average = all ? ((data.good - data.bad) / all).toFixed(3) : 0;\n  let positive = all ? (data.good * 100 / all).toFixed(1) + \" %\" : 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    name: \"good\",\n    data: data[\"good\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"neutral\",\n    data: data[\"neutral\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"bad\",\n    data: data[\"bad\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"all\",\n    data: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"average\",\n    data: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"positive\",\n    data: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst App = () => {\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const feedbackClick = name => {\n    const handler = () => {\n      let localData = Object.assign({}, data);\n      localData[name] += 1;\n      setData(localData);\n    };\n\n    return handler;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    color: \"purple\",\n    name: \"Unicafe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Buttons, {\n    handleClick: feedbackClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","color","name","Button","handleClick","Buttons","Statistic","data","Statistics","all","Object","values","reduce","prev","elem","average","good","bad","toFixed","positive","App","setData","neutral","feedbackClick","handler","localData","assign","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = (props) => {\n  return (\n    <>\n      <h1 style={{ color: props.color }}>{props.name}</h1>\n    </>\n  )\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.name}\n  </button>\n)\n\nconst Buttons = ({ handleClick }) => (\n  <>\n    <h2>Please give your feedback</h2>\n    <Button name=\"good\" handleClick={handleClick(\"good\")}></Button>\n    <Button name=\"neutral\" handleClick={handleClick(\"neutral\")}></Button>\n    <Button name=\"bad\" handleClick={handleClick(\"bad\")}></Button>\n  </>\n)\n\n\nconst Statistic = ({ name, data }) => (<><tr><td>{name}</td><td>{data}</td></tr></>);\n\nconst Statistics = ({ data }) => {\n  let all = Object.values(data).reduce((prev, elem) => prev + elem, 0);\n  if (all === 0) return (\n    <>\n      <h2>Statistics</h2>\n      <p>No feedback given yet.</p>\n    </>\n  )\n\n  let average = all ? ((data.good - data.bad) / all).toFixed(3) : 0;\n  let positive = all ? (data.good*100 / all).toFixed(1)+\" %\" : 0;\n\n  return (\n    <>\n      <h2>Statistics</h2>\n      <table>\n        <tbody>\n          <Statistic name=\"good\" data={data[\"good\"]} />\n          <Statistic name=\"neutral\" data={data[\"neutral\"]} />\n          <Statistic name=\"bad\" data={data[\"bad\"]} />\n          <Statistic name=\"all\" data={all} />\n          <Statistic name=\"average\" data={average} />\n          <Statistic name=\"positive\" data={positive} />\n        </tbody>\n      </table>\n    </>\n  )\n}\n\n\nconst App = () => {\n\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  })\n\n  const feedbackClick = (name) => {\n    const handler = () => {\n      let localData = Object.assign({}, data);\n      localData[name] += 1;\n      setData(localData);\n    }\n    return handler;\n  }\n\n  return (\n    <>\n      <Header color=\"purple\" name=\"Unicafe\" />\n      <hr />\n      <Buttons handleClick={feedbackClick}/>\n      <Statistics data={data} />\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}