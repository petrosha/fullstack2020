{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.name));\n};\n\nconst Statistic = ({\n  name,\n  data\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }\n}, name, \" : \", data));\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, props.name);\n\nconst App = () => {\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n  let all = Object.values(data).reduce((prev, elem) => prev + elem, 0);\n  let average = (data.good - data.bad) / all;\n  let positive = data.good / all;\n\n  const feedbackClick = name => {\n    const handler = () => {\n      let localData = Object.assign({}, data);\n      localData[name] += 1;\n      setData(localData);\n    };\n\n    return handler;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"purple\",\n    name: \"Unicafe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Please give your feedback\"), /*#__PURE__*/React.createElement(Button, {\n    name: \"good\",\n    handleClick: feedbackClick(\"good\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"neutral\",\n    handleClick: feedbackClick(\"neutral\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"bad\",\n    handleClick: feedbackClick(\"bad\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"good\",\n    data: data[\"good\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"neutral\",\n    data: data[\"neutral\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"bad\",\n    data: data[\"bad\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"all\",\n    data: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"average\",\n    data: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"positive\",\n    data: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","color","name","Statistic","data","Button","handleClick","App","setData","good","neutral","bad","all","Object","values","reduce","prev","elem","average","positive","feedbackClick","handler","localData","assign","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Header = (props) => {\n  return (\n    <>\n      <h1 style={{ color: props.color }}>{props.name}</h1>\n    </>\n  )\n}\n\nconst Statistic = ({ name, data }) => (<><p>{name} : {data}</p></>);\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.name}\n  </button>\n)\n\nconst App = () => {\n\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  })\n\nlet    all = Object.values(data).reduce((prev,elem)=>prev+elem,0);\nlet     average =(data.good-data.bad)/all;\nlet   positive=data.good/all;\n\n  const feedbackClick = (name) => {\n    const handler = () => {\n      let localData = Object.assign({}, data);\n      localData[name]+=1;\n      setData(localData);\n    }\n    return handler;\n  }\n\n  return (\n    <div>\n      <Header color=\"purple\" name=\"Unicafe\" />\n      <hr />\n      <h2>Please give your feedback</h2>\n      <Button name=\"good\" handleClick={feedbackClick(\"good\")}></Button>\n      <Button name=\"neutral\" handleClick={feedbackClick(\"neutral\")}></Button>\n      <Button name=\"bad\" handleClick={feedbackClick(\"bad\")}></Button>\n      <hr />\n      <h2>Statistics</h2>\n      <Statistic name=\"good\" data={data[\"good\"]}></Statistic>\n      <Statistic name=\"neutral\" data={data[\"neutral\"]}></Statistic>\n      <Statistic name=\"bad\" data={data[\"bad\"]}></Statistic>\n      <Statistic name=\"all\" data={all}></Statistic>\n      <Statistic name=\"average\" data={average}></Statistic>\n      <Statistic name=\"positive\" data={positive}></Statistic>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}