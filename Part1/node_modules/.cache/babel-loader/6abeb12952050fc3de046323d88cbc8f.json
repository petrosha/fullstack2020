{"ast":null,"code":"var _jsxFileName = \"/mnt/arc/coding/Course/Part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // const App = () => {\n//   const [clicks, setClicks] = useState({\n//     left: 0, right: 0\n//   })\n//   const handleLeftClick = () => {\n//     const newClicks = { \n//       left: clicks.left + 1, \n//       right: clicks.right \n//     }\n//     setClicks(newClicks)\n//   }\n//   const handleRightClick = () => {\n//     const newClicks = { \n//       left: clicks.left, \n//       right: clicks.right + 1 \n//     }\n//     setClicks(newClicks)\n//   }\n//   return (\n//     <div>\n//       {clicks.left}\n//       <button onClick={handleLeftClick}>left</button>\n//       <button onClick={handleRightClick}>right</button>\n//       {clicks.right}\n//     </div>\n//   )\n// }\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, props.name));\n};\n\nconst Statistic = props => {\n  let {\n    name,\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(\"In \", name, data[name]), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, name, \" : \", data[name]));\n};\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }\n}, props.name);\n\nconst App = () => {\n  // save clicks of each button to its own state\n  console.log(Date.now());\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n  let tmp = data[\"good\"];\n\n  const feedbackClick = name => {\n    const handler = () => {\n      let localData = Object.assign(data);\n      localData[name]++;\n      setData(localData);\n      console.log(name, data[name]);\n    };\n\n    return handler;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"purple\",\n    name: \"Unicafe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), tmp, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Please give your feedback\"), /*#__PURE__*/React.createElement(Button, {\n    name: \"good\",\n    handleClick: feedbackClick(\"good\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"neutral\",\n    handleClick: feedbackClick(\"neutral\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: \"bad\",\n    handleClick: feedbackClick(\"bad\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistic, {\n    name: \"good\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), \" \", data[\"good\"], /*#__PURE__*/React.createElement(Statistic, {\n    name: \"neutral\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), data[\"neutral\"], /*#__PURE__*/React.createElement(Statistic, {\n    name: \"bad\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), data[\"bad\"]);\n};\n/*\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/arc/coding/Course/Part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","color","name","Statistic","data","console","log","Button","handleClick","App","Date","now","setData","good","neutral","bad","tmp","feedbackClick","handler","localData","Object","assign","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\n\n// const App = () => {\n//   const [clicks, setClicks] = useState({\n//     left: 0, right: 0\n//   })\n\n//   const handleLeftClick = () => {\n//     const newClicks = { \n//       left: clicks.left + 1, \n//       right: clicks.right \n//     }\n//     setClicks(newClicks)\n//   }\n\n//   const handleRightClick = () => {\n//     const newClicks = { \n//       left: clicks.left, \n//       right: clicks.right + 1 \n//     }\n//     setClicks(newClicks)\n//   }\n\n//   return (\n//     <div>\n//       {clicks.left}\n//       <button onClick={handleLeftClick}>left</button>\n//       <button onClick={handleRightClick}>right</button>\n//       {clicks.right}\n//     </div>\n//   )\n// }\n\n\nconst Header = (props) => {\n  return (\n    <>\n      <h1 style={{ color: props.color }}>{props.name}</h1>\n    </>\n  )\n}\n\nconst Statistic = (props) => {\n  let { name, data } = props;\n  return (\n    <>\n      {console.log(\"In \", name, data[name])}\n      <p>{name} : {data[name]}</p>\n    </>\n  )\n}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.name}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  console.log(Date.now());\n  const [data, setData] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  })\n\n  let tmp=data[\"good\"];\n\n  const feedbackClick = (name) => {\n    const handler = () => {\n      let localData=Object.assign(data);\n\n      localData[name]++;\n      \n      setData(localData);\n      console.log(name, data[name]);\n    }    \n    return handler;\n  }\n\n  return (\n    <div>\n      <Header color=\"purple\" name=\"Unicafe\" /> \n      {tmp}\n      <hr />\n      <h2>Please give your feedback</h2>\n      <Button name=\"good\" handleClick={feedbackClick(\"good\")}></Button>\n      <Button name=\"neutral\" handleClick={feedbackClick(\"neutral\")}></Button>\n      <Button name=\"bad\" handleClick={feedbackClick(\"bad\")}></Button>\n      <hr />\n      <h2>Statistics</h2>\n      <Statistic name=\"good\" data={data}></Statistic> {data[\"good\"]}\n      <Statistic name=\"neutral\" data={data}></Statistic>{data[\"neutral\"]}\n      <Statistic name=\"bad\" data={data}></Statistic>{data[\"bad\"]} \n      \n    </div>\n  )\n}\n\n\n\n\n/*\nconst Content = (props) => {\n  return (\n    <>\n      <Part data={props.data.parts[0]} />\n      <Part data={props.data.parts[1]} />\n      <Part data={props.data.parts[2]} />\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <>\n      <p>Number of exercises {props.data.parts.reduce((prev,elem)=>prev+elem.exercises,0)}</p>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <>\n      <Header data={course} />\n      <Content data={course} />\n      <Total data={course} />\n    </>\n  )\n\n}\n */\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}